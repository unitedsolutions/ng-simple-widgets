{"version":3,"sources":["../../../tmp/dropdown/_constructor/constructor.ts"],"names":[],"mappings":"AACA,OAAO,EAAA,SAAE,EAAU,KAAA,EAAO,SAAA,EAAU,MAAM,eAAA,CAAgB;AAG1D;IAAA;IA6EA,CAAC;IA/DM,4BAAU,GAA0B;QAC3C,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC;oBACxB,QAAQ,EAAE,oBAAoB;oBAC9B,QAAQ,EAAE,6tCAsBT;oBACD,MAAM,EAAE,CAAC,qgBAuBR,CAAC;iBACH,EAAG,EAAE;KACL,CAAC;IACF,kBAAkB;IACX,gCAAc,GAAmE,cAAM,OAAA,EAC7F,EAD6F,CAC7F,CAAC;IACK,gCAAc,GAA2C;QAChE,KAAK,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACzB,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC1B,OAAO,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QAC3B,aAAa,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACjC,kBAAkB,EAAE,CAAC,EAAE,IAAI,EAAE,KAAK,EAAE,EAAE;QACtC,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,IAAI,EAAE,CAAC,MAAM,EAAG,EAAE,EAAE;KAC/C,CAAC;IACF,wBAAC;CA7ED,AA6EC,IAAA;SA7EY,iBAAiB","file":"constructor.js","sourceRoot":"","sourcesContent":["import * as _                        from 'lodash';\nimport {Component, Input, ViewChild} from '@angular/core';\n\n\nexport class DropdownComponent {\n   for;\n   form;\n   items;\n   placeholder;\n   selectionClasses;\n   list;\n  listEl; \n  control;\n  display;\n  transparent; \n  useListCover;\n  selectedValue;\n  highlightedItem;\nstatic decorators: DecoratorInvocation[] = [\n{ type: Component, args: [{\n  selector: 'ng-simple-dropdown',\n  template: `\n    <div class = \"ng-simple-dropdown\">\n      <div class = \"ng-simple-dropdown-selection\" tabindex = \"0\" \n      (click) = \"toggleDisplay()\" (blur) = \"toggleDisplay(false)\"\n      (keydown.space) = \"toggleDisplay()\" (keydown.enter) = \"selectHighlightedItem()\"\n      (keydown.enter) = \"toggleDisplay()\" (keydown.arrowUp) = \"highlightByKeys($event)\" \n      (keydown.arrowDown) = \"highlightByKeys($event, true)\" (keydown.escape) = \"reset()\"\n      [ngClass] = \"selectionClasses\">{{selectedValue}}</div>\n  \n      <div #list [ngClass] = \"{transparent: transparent, display: display}\"\n      class = \"ng-simple-dropdown-list\">\n        <div class = \"ng-simple-dropdown-list-wrapper\" [ngClass] = \"{cover: useListCover}\"\n        (mousemove) = \"useListCover = false\">\n          <div class = \"ng-simple-dropdown-list-item\" *ngFor = \"let item of items\"\n          [ngClass] = \"{highlighted: item.highlighted}\" (click) = \"selectItem(item)\" \n          (mouseenter) = \"highlightItem(item)\">\n            <div class = \"ng-simple-dropdown-list-item-readable\"\n            *ngFor = \"let readable of item.readables\">{{readable}}</div>\n          </div>      \n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .ng-simple-dropdown-list {\n      display: none;\n    }\n    .ng-simple-dropdown-list.display {\n      display: block;\n    }\n    .ng-simple-dropdown-list.transparent {\n      opacity: 0;\n    }\n    .ng-simple-dropdown-list-wrapper {\n      position: relative;\n    }\n    .ng-simple-dropdown-list-wrapper.cover::before {\n      content: \"\";\n      position: absolute;\n      top: 0;\n      right: 0;\n      bottom: 0;\n      left: 0;\n      z-index: 1000;\n      background-color: transparent;\n    }\n  `]\n}, ] },\n];\n/** @nocollapse */\nstatic ctorParameters: () => ({type: any, decorators?: DecoratorInvocation[]}|null)[] = () => [\n];\nstatic propDecorators: {[key: string]: DecoratorInvocation[]} = {\n'for': [{ type: Input },],\n'form': [{ type: Input },],\n'items': [{ type: Input },],\n'placeholder': [{ type: Input },],\n'selectionClasses': [{ type: Input },],\n'list': [{ type: ViewChild, args: ['list', ] },],\n};\n}\n\ninterface DecoratorInvocation {\n  type: Function;\n  args?: any[];\n}\n"]}