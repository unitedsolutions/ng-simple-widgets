{"version":3,"sources":["../../../../tmp/autocomplete/items-filterer/items-highlighter/items-highlighter.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,CAAC,MAAM,QAAQ,CAAC;AAE5B,MAAM,CAAC,OAAO,WAAU,WAAW;IAAnC,iBAgCC;IA/BC,IAAI,cAAc,GAAG,0BAA0B,CAAC;IAChD,IAAI,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,cAAc,EAAE,MAAM,CAAC,CAAC;IAC1D,OAAO,GAAG,IAAI,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;IACpC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;IAEpB,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,UAAA,IAAI;QACjB,IAAA,wBAAQ,CAAS;QACtB,IAAI,OAAO,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;QAEtC,EAAE,CAAA,CAAC,OAAO,CAAC,CAAC,CAAC;YACX,KAAI,CAAC,OAAO,GAAG,KAAK,CAAC;YACrB,IAAI,KAAK,GAAG,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;YACpC,IAAI,mBAAmB,GAAG,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,UAAC,mBAAmB,EAAE,IAAI;gBAClE,IAAI,KAAK,GAAG,OAAO,CAAC,KAAK,EAAE,IAAI,EAAE,CAAC;gBAElC,EAAE,CAAA,CAAC,KAAK,CAAC,CAAC,CAAC;oBACT,KAAK,GAAG,6BAAyB,KAAK,YAAS,CAAC;gBAClD,CAAC;gBAED,MAAM,CAAC,mBAAmB,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC;YAC/C,CAAC,EAAE,EAAE,CAAC,CAAC;YAEP,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,mBAAmB,qBAAA,EAAE,MAAM,EAAE,KAAK,EAAC,CAAC,CAAC;YAErD,EAAE,CAAA,CAAC,WAAW,CAAC,MAAM,KAAK,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC;gBAC1C,KAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;QACH,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,CAAC,CAAC,MAAM,CAAC,IAAI,EAAE,EAAC,mBAAmB,EAAE,EAAE,EAAE,MAAM,EAAE,IAAI,EAAC,CAAC,CAAC;QAC1D,CAAC;IACH,CAAC,CAAC,CAAC;AACL,CAAC","file":"items-highlighter.js","sourceRoot":"","sourcesContent":["import * as _ from 'lodash';\n\nexport default function(searchValue) {\n  let rxCharactersRx = /[-[\\]{}()*+?.,\\\\^$|#\\s]/g;\n  let valueRx = searchValue.replace(rxCharactersRx, '\\\\$&');\n  valueRx = new RegExp(valueRx, 'ig');\n  this.noMatch = true;\n  \n  _.each(this._items, item => {\n    let {readable} = item;\n    let matches = readable.match(valueRx);\n    \n    if(matches) {\n      this.noMatch = false;\n      let parts = readable.split(valueRx);\n      let readableWithMatches = _.reduce(parts, (readableWithMatches, part) => {\n        let match = matches.shift() || '';\n        \n        if(match) {\n          match = `<span class = \"match\">${match}</span>`;\n        }\n        \n        return readableWithMatches += (part + match);\n      }, '');\n      \n      _.extend(item, {readableWithMatches, hidden: false});\n      \n      if(searchValue.length === readable.length) {\n        this.selectItem(item);\n      }\n    } else {\n      _.extend(item, {readableWithMatches: '', hidden: true});\n    }\n  });   \n}\n"]}